{"version":3,"sources":["components/Header.jsx","components/Container.jsx","components/PhaseControl.jsx","components/Timer.jsx","components/Buttons.jsx","mmss.js","gong_sound.wav","App.js","index.js"],"names":["headerStyles","textAlign","padding","backgroundColor","backgroundImage","pb","textStyles","typography","fontWeight","Header","matches500","useMediaQuery","Paper","square","sx","elevation","Typography","component","fontSize","color","marginBottom","containerStyles","display","gridTemplateRows","width","Container","children","outlined","useStyles","makeStyles","root","gridTemplateColumns","justifyItems","alignItems","marginTop","label","gridColumn","textTransform","whiteSpace","PhaseControl","phase","session","length","onArrowUp","onArrowDown","bgColor","classes","Box","className","variant","id","IconButton","onClick","flexDirection","justifyContent","paddingTop","paddingBottom","letterSpacing","Timer","margin","Buttons","isCountingDown","onStartStop","onReset","mmss","value","minutes","Math","floor","seconds","theme","createTheme","palette","mode","primary","main","secondary","success","breakpoints","values","xs","sm","md","lg","xl","height","weight","down","layout","gridRowGap","components","MuiCssBaseline","styleOverrides","App","useState","setIsCountingDown","timerPhase","setTimerPhase","timerValue","setTimerValue","breakLength","setBreakLength","sessionLength","setSessionLength","audioEl","useRef","useEffect","intervalId","setInterval","setTimeout","current","play","clearInterval","ThemeProvider","CssBaseline","pause","currentTime","ref","src","gong","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b12a5bb7.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper, Typography, useMediaQuery } from '@mui/material';\nimport AccessAlarmIcon from '@mui/icons-material/AccessAlarm';\n\nconst headerStyles = {\n    textAlign: 'center',\n    padding: 3,\n    backgroundColor: 'primary.main',\n    backgroundImage: 'none',\n    '@media screen and (max-width: 375px)': {\n        pb: 2,\n    }\n}\n\nconst textStyles = {\n    typography: 'h2',\n    '@media screen and (max-width: 375px)': {\n        typography: 'h3',\n        fontWeight: 'fontWeightLight'\n    }\n\n}\n\nconst Header = () => {\n\n    const matches500 = useMediaQuery('(max-width: 500px)');\n\n    return( \n          \n        <Paper square sx={headerStyles} elevation={15} >\n            <Typography sx={textStyles}  component=\"h1\"> \n                Pomodoro\n                  {/* Insert break line for screens below 500px  */}\n                  {matches500 ? <br /> : \" \" }\n                Cl\n                <AccessAlarmIcon sx={{ fontSize: 45, color: 'secondary.main', marginBottom: '-5px' }} />\n                ck\n            </Typography>\n        </Paper>\n    )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport { Paper } from '@mui/material';\n\n\nconst containerStyles = {\n    display:'grid',\n    gridTemplateRows: '1fr 1.75fr 1fr',\n    backgroundColor: 'primary.main',\n    backgroundImage: 'none',\n    '@media screen and (max-width: 414px)': {\n        width:'100vw',\n    },\n\n}\n\n\nconst Container = ({ children }) => {\n\n    return (\n\n        <Paper square outlined sx={containerStyles} elevation={15}>\n            { children }\n        </Paper>\n    )\n}\n\nexport default Container;","import React from 'react';\nimport { Typography, IconButton, Box } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport ArrowDownwardOutlinedIcon from '@mui/icons-material/ArrowDownwardOutlined';\nimport ArrowUpwardOutlinedIcon from '@mui/icons-material/ArrowUpwardOutlined';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        justifyItems: 'center',\n        alignItems: 'center',\n        marginTop: 15,\n        marginBottom:15,\n    },\n    label: {\n        gridColumn:'1 / span 3',\n        textTransform: 'uppercase',\n        fontWeight: 100,\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        '@media (max-width: 350px)' : {\n            whiteSpace: 'normal'\n          }\n    }\n})\n\nexport default function PhaseControl( {phase, session, length, onArrowUp, onArrowDown }) {\n\n    const bgColor = phase === 'break' ? 'success' : 'secondary';\n    const classes = useStyles();\n    const handleArrowDown = () => {\n        onArrowDown();\n    }\n\n    const handleArrowUp = () => {\n        onArrowUp();\n    }\n\n    return(\n        <Box className={classes.root}>\n            <Typography variant=\"h6\" className={classes.label} id={`${session}-label`}  >\n                {session} length\n            </Typography>\n            <IconButton\n                id={`${session}-decrement`}\n                onClick={handleArrowDown}\n             \n            >\n                <ArrowDownwardOutlinedIcon fontSize=\"large\" color={bgColor}/>\n            </IconButton>\n            <Typography variant=\"h6\" id={`${session}-length`}>\n                {length}\n            </Typography>\n\n            <IconButton\n                id={`${session}-increment`}\n                onClick={handleArrowUp}\n            >\n                <ArrowUpwardOutlinedIcon fontSize=\"large\" color={bgColor}/>\n            </IconButton>\n\n        </Box>\n    )\n}","import React from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    label: {\n        textTransform: 'uppercase',\n        padding: 10,\n        letterSpacing: '5px !important',\n    }\n})\n const Timer = ({ session, length }) => {\n\n    const classes = useStyles();\n    const bgColor = session === 'break' ? 'success.main' : 'secondary.main';\n\n    return(\n        <Box className={classes.root} backgroundColor={bgColor}>\n            <Typography\n            className={classes.label}\n            variant='h3'\n            id=\"timer-label\"\n            >\n                {session}\n            </Typography>\n            <Typography\n            id=\"time-left\"\n            variant=\"h2\"\n            >\n                {length}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default Timer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from '@mui/material';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@mui/icons-material/PauseCircleOutline';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent:'space-evenly',\n        alignItems: 'center',\n        width: '85%',\n        margin: 'auto',\n    }\n})\n\nconst Buttons = ({ isCountingDown, onStartStop, onReset, session }) => {\n\n    const classes = useStyles();\n    const bgColor = session === 'break' ? 'success' : 'secondary';\n\n    \n    return(\n        <div className = {classes.root}>\n            <IconButton\n            id=\"start_stop\"\n            onClick={() => onStartStop()}\n            >\n                {/* Change icon accordingly to timer state */}\n                {isCountingDown ? (\n                    <PauseCircleOutlineIcon fontSize=\"large\" color={bgColor}/>\n                ) : (\n                    <PlayCircleOutlineIcon fontSize='large' color={bgColor}/>\n                )}\n            </IconButton>\n\n            <IconButton\n            id=\"reset\"\n            onClick={()=> onReset()}\n            >\n                <AutorenewIcon\n                    fontSize=\"large\"\n                    color={bgColor}\n                />\n            </IconButton>\n        </div>\n);\n}\n\nexport default Buttons;\n\nButtons.propTypes = {\n    isCountingDown: PropTypes.bool.isRequired,\n    onStartStop: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n}","\n// convert seconds to minutes\n\nexport const mmss = (value) => {\n\nlet minutes = Math.floor(value / 60);\nminutes = minutes < 10 ? '0' + minutes : minutes;\n\nlet seconds = Math.floor(value % 60);\nseconds = seconds < 10 ? '0' + seconds : seconds;\n\nreturn `${minutes}:${seconds}`;\n}","export default __webpack_public_path__ + \"static/media/gong_sound.82e9f16d.wav\";","import './App.css';\nimport Header from './components/Header';\nimport Container from './components/Container';\nimport PhaseControl from './components/PhaseControl';\nimport Timer from './components/Timer';\nimport Buttons from './components/Buttons';\nimport { makeStyles } from '@mui/styles';\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport { mmss } from './mmss.js'\nimport React, { useState, useEffect, useRef } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport gong from './gong_sound.wav'\n\nconst mainRed = \"#d32f2f\";\nconst mainGreen = '#2e7d32';\nconst mainGrey = '#102027';\nconst lightGrey = \"#62727b\";\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: mainGrey,\n    },\n    secondary: { \n      main: mainRed,\n    },\n    success: {\n      main: mainGreen,\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 1000,\n      lg: 1200,\n      xl: 1536,\n    },\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n\n    root: {\n      display: 'flex',\n      justifyContent:'center',\n      alignItems: 'center',\n      height: '100vh',\n      weight: '100vw',\n      backgroundColor: lightGrey,\n      [`${theme.breakpoints.down('md')} and (orientation: landscape)`]: {\n        height: 'auto',\n    },\n    },\n    layout: {\n      display: 'grid',\n      gridRowGap: 12.5,\n      [`${theme.breakpoints.down('md')} and (orientation: landscape)`]: {\n        padding: '25px 0',\n    },\n      \n   },\n   phase: {\n     display: 'flex',\n     flexDirection: 'row',\n     justifyContent: 'space-evenly',\n     width: '100%',\n   },\n   components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        font-weight: 400;\n      }\n      `,\n    }\n  }\n\n}));\n\n\n\nfunction App() {\n\n\n   // Timer\n   const [isCountingDown, setIsCountingDown] = useState(false);\n   const [timerPhase, setTimerPhase] = useState('session');\n   const [timerValue, setTimerValue] = useState(1500);\n\n  // Break\n  const [breakLength, setBreakLength] = useState(5);\n\n  const incrementBreakLength = () => {\n    if (!isCountingDown && breakLength < 60) {\n      setBreakLength(breakLength + 1);\n\n      if (timerPhase===\"break\") {\n        setTimerValue(breakLength*60+60);\n      }\n      \n    }\n  }\n\n  const decrementBreakLength = () => {\n    if (!isCountingDown && breakLength > 1) {\n      setBreakLength(breakLength - 1);\n\n      if (timerPhase===\"break\") {\n        setTimerValue(breakLength*60-60)\n      }\n     \n    }\n  }\n\n  //Session\n  const [sessionLength, setSessionLength] = useState(25);\n\n  const incrementSessionLength = () => {\n    if (!isCountingDown && sessionLength < 60 ) {\n      setSessionLength(sessionLength + 1);\n\n      if (timerPhase===\"session\") {\n        setTimerValue(sessionLength* 60 +60)\n      }\n      \n     \n    }\n  }\n\n  const decrementSessionLength = () => {\n    if (!isCountingDown && sessionLength > 1) {\n      setSessionLength(sessionLength -1);\n        \n\n        if (timerPhase===\"session\") {\n          setTimerValue(sessionLength* 60 -60)\n        }\n      \n    }\n  }\n\n \n\n\n  const audioEl = useRef(null);\n\n  useEffect(() => {\n    const switchPhase = () => {\n      if (timerPhase === 'session') {\n        setTimerPhase('break');\n        setTimerValue(breakLength * 60);\n      } else {\n        setTimerPhase('session');\n        setTimerValue(sessionLength * 60);\n      }\n    };\n\n\n    let intervalId;\n    if (isCountingDown && timerValue > 1) {\n      intervalId = setInterval(() => {\n        setTimerValue(timerValue -1);\n      }, 1000);\n\n      // console.log(timerValue)\n\n      // The timer has reached zero \n    } else if (isCountingDown && timerValue === 1) {\n      // intervalId = setInterval(() => {\n      //   setTimerValue(timerValue -1);\n      // }, 1000);\n      // console.log(timerValue)\n      setTimeout(() => {\n        setTimerValue(0)\n        audioEl.current.play()\n      },1000)\n      // audioEl.current.currentTime=0;\n      setTimeout(() => {\n        switchPhase();\n      },2000);\n     \n    } else {\n      clearInterval(intervalId);\n    } \n\n      // Clean up before the component unmounts\n    return () =>  clearInterval(intervalId);\n\n  }, [isCountingDown,timerValue,breakLength,sessionLength,timerPhase]);\n\n    // Start Timer\n    const startTimer = () => {\n      setIsCountingDown(true);\n    }\n\n    // Stop Timer\n    const stopTimer = () => {\n      setIsCountingDown(false);\n\n    }\n\n    // Reset\n    const resetTimer = () => {\n      setIsCountingDown(false);\n      setTimerPhase('session');\n      setTimerValue(1500);\n      setBreakLength(5);\n      setSessionLength(25);\n      audioEl.current.pause();\n      audioEl.current.currentTime=0;\n\n    }\n\n\n\n    const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme} >\n       <CssBaseline />\n    <div className={classes.root} >\n      <div className={classes.layout} >\n        <Header />\n        <Container>\n          <div className={classes.phase}>\n            <PhaseControl\n            session=\"break\"\n            phase={timerPhase}\n            length={breakLength}\n            onArrowDown={decrementBreakLength}\n            onArrowUp={incrementBreakLength}\n            />\n            <PhaseControl\n            session=\"session\"\n            phase={timerPhase}\n            length={sessionLength}\n            onArrowDown={decrementSessionLength}\n            onArrowUp={incrementSessionLength}\n            />\n          </div>\n          <Timer\n            length = {mmss(timerValue)}\n            session = {timerPhase}\n            backgroundColor={theme.palette.secondary.main}\n          />\n          \n\n          <Buttons\n          session={timerPhase}\n          isCountingDown={isCountingDown}\n          onStartStop={isCountingDown ? stopTimer : startTimer}\n          onReset={resetTimer}\n          />\n        </Container>\n        <audio ref={audioEl} src={gong} id=\"beep\"></audio>\n      </div>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}